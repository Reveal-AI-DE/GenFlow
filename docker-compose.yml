# Copyright (C) 2025 Reveal AI
#
# Licensed under the Apache License, Version 2.0 with Additional Commercial Terms.

services:
  genflow_db:
    container_name: genflow_db
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: genflow
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - genflow_db:/var/lib/postgresql/data
    networks:
      - genflow

  genflow_server:
    container_name: genflow_server
    image: genflow/server:${GF_VERSION:-dev}
    restart: always
    depends_on:
      genflow_db:
        condition:
          service_started
    environment:
      DJANGO_MODWSGI_EXTRA_ARGS: ''
      ALLOWED_HOSTS: '*'
      GF_POSTGRES_HOST: genflow_db
      no_proxy: ${no_proxy:-}
      NUMPROCS: 2
      GF_EMAIL_HOST_PASSWORD: ${GF_EMAIL_HOST_PASSWORD:-}
      GF_GOOGLE_CLIENT_ID: ${GF_GOOGLE_CLIENT_ID:-}
      GF_GOOGLE_CLIENT_SECRET: ${GF_GOOGLE_CLIENT_SECRET:-}
    command: init run server
    labels:
      traefik.enable: 'true'
      traefik.http.services.genflow.loadbalancer.server.port: '8080'
      traefik.http.routers.genflow.rule: Host(`${GF_HOST:-localhost}`) &&
        (PathPrefix(`/api/`) || PathPrefix(`/statics/`) || PathPrefix(`/admin`) || PathPrefix(`/ws`) || PathPrefix(`/media`))
      traefik.http.routers.genflow.entrypoints: web
    volumes:
      - genflow_data:/home/django/data
      - genflow_keys:/home/django/keys
    networks:
      - genflow

  genflow_ui:
    container_name: genflow_ui
    image: genflow/ui:${GF_VERSION:-dev}
    restart: always
    depends_on:
      - genflow_server
    labels:
      traefik.enable: 'true'
      traefik.http.services.genflow-ui.loadbalancer.server.port: '80'
      traefik.http.routers.genflow-ui.rule: Host(`${GF_HOST:-localhost}`)
      traefik.http.routers.genflow-ui.entrypoints: web
    networks:
      - genflow

  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: always
    ports:
      - 8080:8080
      - 8090:8090
    environment:
      TRAEFIK_ACCESSLOG_FORMAT: json
      TRAEFIK_ACCESSLOG_FIELDS_DEFAULTMODE: drop
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_ClientHost: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_DownstreamContentSize: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_DownstreamStatus: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_Duration: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_RequestHost: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_RequestMethod: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_RequestPath: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_RequestPort: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_RequestProtocol: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_RouterName: keep
      TRAEFIK_ACCESSLOG_FIELDS_NAMES_StartUTC: keep

      TRAEFIK_LOG_FORMAT: json
      TRAEFIK_ENTRYPOINTS_web_ADDRESS: :8080
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: "false"
      TRAEFIK_PROVIDERS_DOCKER_NETWORK: genflow
      TRAEFIK_PROVIDERS_FILE_DIRECTORY: /etc/traefik/rules
    # Uncomment to get Traefik dashboard
    #   TRAEFIK_API_DASHBOARD: "true"
    #   TRAEFIK_ENTRYPOINTS_dashboard_ADDRESS: :8090
    # labels:
    #   traefik.enable: "true"
    #   traefik.http.routers.dashboard.entrypoints: dashboard
    #   traefik.http.routers.dashboard.service: api@internal
    #   traefik.http.routers.dashboard.rule: Host(`${GF_HOST:-localhost}`)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - genflow
    logging:
      driver: 'json-file'
      options:
        max-size: 100m
        max-file: '10'

volumes:
  genflow_db:
  genflow_data:
  genflow_keys:

networks:
  genflow: