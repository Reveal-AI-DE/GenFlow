openapi: 3.0.3
info:
  title: GenFlow REST API
  version: 1.0.0
  description: REST API for GenFlow project
  termsOfService: https://www.google.com/policies/terms/
  contact:
    name: Reveal AI team
    url: https://github.com/Reveal-AI-DE/GenFlow
    email: support@revealai.de
  license:
    name: MIT License
    url: https://en.wikipedia.org/wiki/MIT_License
paths:
  /api/auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content: {}
          description: ''
  /api/auth/logout:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content: {}
          description: ''
  /api/auth/password/change:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - basicAuth: []
      responses:
        '200':
          content: {}
          description: ''
  /api/auth/password/reset:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content: {}
          description: ''
  /api/auth/password/reset/confirm:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content: {}
          description: ''
  /api/auth/register:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSerializerExRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterSerializerExRequest'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '201':
          content: {}
          description: ''
  /api/teams:
    get:
      operationId: teams_list
      description: Retrieve a list of all teams. Supports filtering and searching
        by name and owner username.
      summary: List teams
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner__username
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - teams
      security:
      - basicAuth: []
      responses:
        '200':
          content: {}
          description: ''
    post:
      operationId: teams_create
      description: Create a new team with the provided details.
      summary: Create a team
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamWriteRequest'
        required: true
      security:
      - basicAuth: []
      responses:
        '201':
          content: {}
          description: ''
  /api/teams/{id}:
    get:
      operationId: teams_retrieve
      description: Retrieve detailed information about a specific team by its ID.
      summary: Get team details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - basicAuth: []
      responses:
        '200':
          content: {}
          description: ''
    patch:
      operationId: teams_partial_update
      description: Partially update the details of a specific team.Only the provided
        fields will be updated.
      summary: Updates a team
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeamWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeamWriteRequest'
      security:
      - basicAuth: []
      responses:
        '200':
          content: {}
          description: ''
    delete:
      operationId: teams_destroy
      description: Delete a specific team by its ID.
      summary: Delete a team
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - basicAuth: []
      responses:
        '204':
          description: The team has been deleted
components:
  schemas:
    BasicUser:
      type: object
      description: |-
        Serializer for the User model tha returns a serialized representation
        of the User model with the basic fields, and validates the presence of
        unknown fields in the input data.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
      required:
      - password
    PasswordChangeRequest:
      type: object
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedTeamWriteRequest:
      type: object
      description: |-
        Serializer for Team model, to be used for POST requests.
        It uses the TeamReadSerializer for the representation of the instance data.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
    RegisterSerializerEx:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        email_verification_required:
          type: boolean
          readOnly: true
        key:
          type: string
          nullable: true
          readOnly: true
      required:
      - email
      - username
    RegisterSerializerExRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
        password1:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
        first_name:
          type: string
          minLength: 1
        last_name:
          type: string
          minLength: 1
      required:
      - email
      - password1
      - password2
      - username
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
    TeamRead:
      type: object
      description: |-
        Serializer for Team model, where all fields are read-only.
        To be used for GET requests.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/BasicUser'
          nullable: true
        user_role:
          type: string
          readOnly: true
        is_personal:
          type: string
          readOnly: true
      required:
      - owner
    TeamWriteRequest:
      type: object
      description: |-
        Serializer for Team model, to be used for POST requests.
        It uses the TeamReadSerializer for the representation of the instance data.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
      required:
      - name
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
externalDocs:
  description: GenFlow documentation
  url: https://genflow.github.io/genflow/docs/
