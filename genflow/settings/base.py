# Copyright (C) 2025 Reveal AI
#
# Licensed under the Apache License, Version 2.0 with Additional Commercial Terms.

"""
Django settings for genflow project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import sys
import tempfile
from pathlib import Path

from corsheaders.defaults import default_headers

from genflow import __version__

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = str(Path(__file__).parents[2])

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")


def generate_secret_key():
    """
    Creates secret_key.py in such a way that multiple processes calling
    this will all end up with the same key (assuming that they share the
    same "keys" directory).
    """

    from django.utils.crypto import get_random_string

    keys_dir = os.path.join(BASE_DIR, "keys")
    if not os.path.isdir(keys_dir):
        os.mkdir(keys_dir)

    secret_key_fname = "secret_key.py"  # nosec

    with tempfile.NamedTemporaryFile(
        mode="wt",
        dir=keys_dir,
        prefix=secret_key_fname + ".",
    ) as f:
        chars = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)"
        f.write("SECRET_KEY = '{}'\n".format(get_random_string(50, chars)))

        # Make sure the file contents are written before we link to it
        # from the final location.
        f.flush()

        try:
            os.link(f.name, os.path.join(keys_dir, secret_key_fname))
        except FileExistsError:
            # Somebody else created the secret key first.
            # Discard ours and use theirs.
            pass


try:
    sys.path.append(BASE_DIR)
    from keys.secret_key import SECRET_KEY  # pylint: disable=unused-import
except ModuleNotFoundError:
    generate_secret_key()
    from keys.secret_key import SECRET_KEY

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "compressor",
    "dj_rest_auth",
    "dj_rest_auth.registration",
    "dj_pagination",
    "django_filters",
    "rest_framework",
    "rest_framework.authtoken",
    "drf_spectacular",
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "corsheaders",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "genflow.apps.team",
    "genflow.apps.iam",
    "genflow.apps.restriction",
    "genflow.apps.core",
    "genflow.apps.prompt",
    "genflow.apps.assistant",
    "genflow.apps.session",
]

SITE_ID = 1

REST_FRAMEWORK = {
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.MultiPartParser",
    ],
    "DEFAULT_RENDERER_CLASSES": [
        "genflow.apps.core.renderers.GenFlowAPIRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
        "genflow.apps.iam.permissions.PermissionEnforcer",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ],
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.AcceptHeaderVersioning",
    "ALLOWED_VERSIONS": ("1.0"),
    "DEFAULT_VERSION": "1.0",
    "VERSION_PARAM": "version",
    "DEFAULT_PAGINATION_CLASS": "genflow.apps.core.pagination.CustomPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_FILTER_BACKENDS": (
        "rest_framework.filters.SearchFilter",
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.OrderingFilter",
        "genflow.apps.team.filters.TeamFilterBackend",
    ),
    "SEARCH_PARAM": "search",
    # Disable default handling of the 'format' query parameter by REST framework
    "URL_FORMAT_OVERRIDE": "scheme",
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {
        "anon": "100/minute",
    },
    "DEFAULT_METADATA_CLASS": "rest_framework.metadata.SimpleMetadata",
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

REST_AUTH = {
    "REGISTER_SERIALIZER": "genflow.apps.iam.serializers.RegisterSerializerEx",
    "PASSWORD_RESET_SERIALIZER": "genflow.apps.iam.serializers.PasswordResetSerializerEx",
    "OLD_PASSWORD_FIELD_ENABLED": True,
    "LOGOUT_ON_PASSWORD_CHANGE": True,
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "dj_pagination.middleware.PaginationMiddleware",
    "genflow.apps.team.middleware.IAMContextMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]

UI_URL = ""

STATICFILES_FINDERS = {
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "compressor.finders.CompressorFinder",
}

ROOT_URLCONF = "genflow.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "genflow.asgi.application"

# IAM settings
IAM_TYPE = "BASIC"
IAM_DEFAULT_ROLE = "user"
IAM_ADMIN_ROLE = "admin"
# Index in the list below corresponds to the priority (0 has highest priority)
IAM_ROLES = [IAM_ADMIN_ROLE, "user"]
LOGIN_URL = "rest_login"
LOGIN_REDIRECT_URL = "/"

OBJECTS_NOT_RELATED_WITH_TEAM = ["user", "model"]

# TEAM settings
USER_DEFAULT_TEAM_NAME = "Personal"
TEAM_INVITATION_CONFIRM = "No"


AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

# https://github.com/pennersr/django-allauth
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_REQUIRED = True

# set UI url to redirect to after e-mail confirmation
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = "/#/auth/email-confirmed"
INCORRECT_EMAIL_CONFIRMATION_URL = "/#/auth/email-not-confirmed"
ACCOUNT_EMAIL_VERIFICATION_SENT_REDIRECT_URL = "/#/auth/verification-sent"
RESET_PASSWORD_URL = "/#/auth/password-reset-confirm"

# change default allauth account adapter
ACCOUNT_ADAPTER = "genflow.apps.iam.adapters.DefaultAccountAdapterEx"

# Social account settings
SOCIALACCOUNT_PROVIDERS = {}
if "GF_GOOGLE_CLIENT_ID" in os.environ and "GF_GOOGLE_CLIENT_SECRET" in os.environ:
    SOCIALACCOUNT_PROVIDERS["google"] = {
        "APP": {
            "client_id": os.environ.get("GF_GOOGLE_CLIENT_ID", None),
            "secret": os.environ.get("GF_GOOGLE_CLIENT_SECRET", None),
            "key": "",
        },
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "offline",
        },
    }


# JavaScript and CSS compression
# https://django-compressor.readthedocs.io

COMPRESS_CSS_FILTERS = [
    "compressor.filters.css_default.CssAbsoluteFilter",
    "compressor.filters.cssmin.rCSSMinFilter",
]
# No compression for js files (template literals were compressed bad)
COMPRESS_JS_FILTERS = []


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = os.getenv("TZ", "Etc/UTC")

USE_I18N = True

USE_TZ = True

CSRF_COOKIE_NAME = "csrftoken"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/statics/"
STATIC_ROOT = os.path.join(BASE_DIR, "statics")
os.makedirs(STATIC_ROOT, exist_ok=True)

CONFIG_ROOT = os.path.join(BASE_DIR, "config")
MODEL_CONFIG_ROOT = os.path.join(CONFIG_ROOT, "model")

DATA_ROOT = os.path.join(BASE_DIR, "data")
os.makedirs(DATA_ROOT, exist_ok=True)

ASSISTANTS_ROOT = os.path.join(DATA_ROOT, "assistants")
os.makedirs(ASSISTANTS_ROOT, exist_ok=True)

SESSIONS_ROOT = os.path.join(DATA_ROOT, "sessions")
os.makedirs(SESSIONS_ROOT, exist_ok=True)

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(DATA_ROOT, "media")
os.makedirs(MEDIA_ROOT, exist_ok=True)

PROVIDERS_URL = "/media/providers"
PROVIDERS_ROOT = os.path.join(MEDIA_ROOT, "providers")
os.makedirs(PROVIDERS_ROOT, exist_ok=True)

USERS_MEDIA_URL = "/media/users"
USERS_MEDIA_ROOT = os.path.join(MEDIA_ROOT, "users")
os.makedirs(USERS_MEDIA_ROOT, exist_ok=True)

PROMPTS_MEDIA_ROOT = os.path.join(MEDIA_ROOT, "prompts")
os.makedirs(PROMPTS_MEDIA_ROOT, exist_ok=True)

ASSISTANT_MEDIA_ROOT = os.path.join(MEDIA_ROOT, "assistants")
os.makedirs(ASSISTANT_MEDIA_ROOT, exist_ok=True)

CORS_ALLOW_HEADERS = list(default_headers) + [
    # extended upload protocol headers
    "x-team",
]

SPECTACULAR_SETTINGS = {
    "TITLE": "GenFlow REST API",
    "DESCRIPTION": "REST API for GenFlow project",
    # Statically set schema version. May also be an empty string. When used together with
    # view versioning, will become '0.0.0 (v2)' for 'v2' versioned requests.
    # Set VERSION to None if only the request version should be rendered.
    "VERSION": __version__,
    "CONTACT": {
        "name": "Reveal AI team",
        "url": "https://github.com/Reveal-AI-DE/GenFlow",
        "email": "support@revealai.de",
    },
    "LICENSE": {
        "name": "Apache 2.0 License Extended",
        "url": "https://github.com/Reveal-AI-DE/GenFlow/blob/develop/LICENSE.md",
    },
    "SERVE_PUBLIC": True,
    "SERVE_PERMISSIONS": ["rest_framework.permissions.IsAuthenticated"],
    # https://swagger.io/docs/open-source-tools/swagger-ui/usage/configuration/
    "SWAGGER_UI_SETTINGS": {
        "deepLinking": True,
        "displayOperationId": True,
        "displayRequestDuration": True,
        "filter": True,
        "showExtensions": True,
    },
    "TOS": "https://www.google.com/policies/terms/",
    "EXTERNAL_DOCS": {
        "description": "GenFlow documentation",
        "url": "https://genflow.github.io/genflow/docs/",
    },
    # OTHER SETTINGS
    # https://drf-spectacular.readthedocs.io/en/latest/settings.html
    # TODO: Our current implementation does not suppose this.
    # Need to reconsider this later. It happens, for example,
    # in TaskSerializer for data-originated fields - they can be empty.
    # https://github.com/tfranzel/drf-spectacular/issues/54
    "COMPONENT_NO_READ_ONLY_REQUIRED": True,
    # Required for correct file upload type (bytes)
    "COMPONENT_SPLIT_REQUEST": True,
    "ENUM_NAME_OVERRIDES": {
        "StatusEnum": "genflow.apps.assistant.models.AssistantStatus",
    },
    # Coercion of {pk} to {id} is controlled by SCHEMA_COERCE_PATH_PK. Additionally,
    # some libraries (e.g. drf-nested-routers) use '_pk' suffixed path variables.
    # This setting globally coerces path variables like '{user_pk}' to '{user_id}'.
    "SCHEMA_COERCE_PATH_PK_SUFFIX": True,
    "SCHEMA_PATH_PREFIX": "/api",
    "SCHEMA_PATH_PREFIX_TRIM": False,
}

GF_LIMITS = {
    "PROMPT_GROUP": 10,
    "PROMPT": 5,
    "ASSISTANT_GROUP": 10,
    "ASSISTANT": 5,
    "MAX_FILES_PER_ASSISTANT": 2,  # 2 files
    "SESSION": 10,
    "MAX_FILES_PER_SESSION": 1,  # 1 file
    "TEAM": 2,
    "MAX_INVITATION_PER_TEAM": 10,
    "MESSAGE": 100,
    "MAX_FILE_SIZE": 2,  # 2MB
    "FILE_SUPPORTED_TYPES": [
        "application/pdf",
        "text/html",
        "text/plain",
    ],
    "MAX_AVATAR_SIZE": 1,  # 1MB
    "AVATAR_SUPPORTED_TYPES": [
        "image/png",
        "image/jpeg",
        "image/jpg",
    ],
}
